
# Code generated by bmp_to_icon.py
from uctypes import addressof

_icons = { 
0: (
    b'\xff\xff\xff\xff\xff\xff\xff\xd7\xff\xff\xff\xff\xff\xff\xff\xd5'
    b'\xff\xff\xff\xff\xff\xff\xff\x55\xc0\x00\x00\x00\x00\x00\xfd\x57'
    b'\x00\x00\x00\x00\x00\x03\xf5\x57\x02\xaa\xaa\xaa\xaa\xaa\xa5\x5f'
    b'\x02\xaa\xaa\xaa\xaa\xaa\x95\x7f\x02\xaa\xaa\xaa\xaa\xaa\x55\xff'
    b'\x02\xaa\xaa\xaa\xaa\xaa\x55\xff\x02\xaa\xaa\xaa\xaa\xa9\x57\xcf'
    b'\x02\xaa\xaa\xaa\xaa\xa5\x5b\x0f\x02\xaa\xaa\xaa\xaa\xa5\x58\x0f'
    b'\x02\xaa\xaa\xaa\xaa\x95\x68\x0f\x02\xaa\xaa\xaa\xaa\x55\xa8\x0f'
    b'\x02\xaa\x5a\xaa\xaa\x55\xa8\x0f\x02\xa9\x56\xaa\xa9\x56\xa8\x0f'
    b'\x02\xaa\x55\xaa\xa5\x5a\xa8\x0f\x02\xaa\x55\x6a\x95\x5a\xa8\x0f'
    b'\x02\xaa\x95\x5a\x95\x6a\xa8\x0f\x02\xaa\xa5\x56\x55\xaa\xa8\x0f'
    b'\x02\xaa\xa9\x55\x56\xaa\xa8\x0f\x02\xaa\xaa\x55\x56\xaa\xa8\x0f'
    b'\x02\xaa\xaa\x95\x5a\xaa\xa8\x0f\x02\xaa\xaa\xa5\x6a\xaa\xa8\x0f'
    b'\x02\xaa\xaa\xa9\x6a\xaa\xa8\x0f\x02\xaa\xaa\xaa\xaa\xaa\xa8\x0f'
    b'\x02\xaa\xaa\xaa\xaa\xaa\xa8\x0f\x02\xaa\xaa\xaa\xaa\xaa\xa8\x0f'
    b'\x02\xaa\xaa\xaa\xaa\xaa\xa8\x0f\x02\xaa\xaa\xaa\xaa\xaa\xa8\x0f'
    b'\x00\x00\x00\x00\x00\x00\x00\x3f\xc0\x00\x00\x00\x00\x00\x00\xff'
),
1: (
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x00\x00\x00\x00\x00\xff'
    b'\x00\x00\x00\x00\x00\x00\x00\x3f\x02\xaa\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x02\xaa\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\x00\x00\x00\x00\x00\x00\x00\x3f\xc0\x00\x00\x00\x00\x00\x00\xff'
),
2: (
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xc0\x00\x00\x00\x00\x00\x00\xff'
    b'\x00\x00\x00\x00\x00\x00\x00\x3f\x02\xaa\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xa5\x55\x56\xaa\xa8\x3f'
    b'\x0a\xaa\x95\x55\x55\xaa\xa8\x3f\x0a\xaa\x95\x55\x55\xaa\xa8\x3f'
    b'\x0a\xaa\x95\x55\x55\xaa\xa8\x3f\x0a\xaa\x95\x55\x55\xaa\xa8\x3f'
    b'\x0a\xaa\x95\x55\x55\xaa\xa8\x3f\x0a\xaa\x95\x55\x55\xaa\xa8\x3f'
    b'\x0a\xaa\x95\x55\x55\xaa\xa8\x3f\x0a\xaa\x95\x55\x55\xaa\xa8\x3f'
    b'\x0a\xaa\x95\x55\x55\xaa\xa8\x3f\x0a\xaa\xa5\x55\x56\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xa8\x3f\x02\xaa\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\x00\x00\x00\x00\x00\x00\x00\x3f\xc0\x00\x00\x00\x00\x00\x00\xff'
),
3: (
    b'\xff\xff\xff\x00\x00\xff\xff\xff\xff\xff\xc0\x00\x00\x03\xff\xff'
    b'\xff\xfc\x00\xaa\xaa\x00\x3f\xff\xff\xf0\x0a\xaa\xaa\xa0\x0f\xff'
    b'\xff\xc0\xaa\xaa\xaa\xaa\x03\xff\xff\x02\xaa\xaa\xaa\xaa\x80\xff'
    b'\xfc\x0a\xaa\xaa\xaa\xaa\xa0\x3f\xf0\x2a\xaa\xaa\xaa\xaa\xa8\x0f'
    b'\xf0\xaa\xaa\xaa\xaa\xaa\xaa\x0f\xc0\xaa\xaa\xaa\xaa\xa6\xaa\x03'
    b'\xc2\xaa\xaa\xaa\xaa\x95\xaa\x83\xc2\xaa\xaa\xaa\xaa\x56\xaa\x83'
    b'\x0a\xaa\xaa\xaa\xa9\x56\xaa\x80\x0a\xaa\xaa\xaa\xa9\x5a\xaa\xa0'
    b'\x0a\xaa\xaa\xaa\xa5\x6a\xaa\xa0\x0a\xaa\xaa\xaa\x95\x6a\xaa\xa0'
    b'\x0a\xaa\xaa\xaa\x95\xaa\xaa\xa0\x0a\xaa\x96\xaa\x55\xaa\xaa\xa0'
    b'\x0a\xaa\x95\xaa\x56\xaa\xaa\xa0\x0a\xaa\x95\x69\x5a\xaa\xaa\x80'
    b'\xc2\xaa\xa5\x55\x5a\xaa\xaa\x83\xc2\xaa\xa9\x55\x6a\xaa\xaa\x83'
    b'\xc0\xaa\xaa\x95\xaa\xaa\xaa\x03\xf0\xaa\xaa\xa5\xaa\xaa\xaa\x0f'
    b'\xf0\x2a\xaa\xaa\xaa\xaa\xa8\x0f\xfc\x0a\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\xff\x02\xaa\xaa\xaa\xaa\x80\xff\xff\xc0\xaa\xaa\xaa\xaa\x03\xff'
    b'\xff\xf0\x0a\xaa\xaa\xa0\x0f\xff\xff\xfc\x00\x2a\xa8\x00\x3f\xff'
    b'\xff\xff\xc0\x00\x00\x03\xff\xff\xff\xff\xff\x00\x00\xff\xff\xff'
),
4: (
    b'\xff\xff\xff\x00\x00\xff\xff\xff\xff\xff\xc0\x00\x00\x03\xff\xff'
    b'\xff\xfc\x00\xaa\xaa\x00\x3f\xff\xff\xf0\x0a\xaa\xaa\xa0\x0f\xff'
    b'\xff\xc0\xaa\xaa\xaa\xaa\x03\xff\xff\x02\xaa\xaa\xaa\xaa\x80\xff'
    b'\xfc\x0a\xaa\xaa\xaa\xaa\xa0\x3f\xf0\x2a\xaa\xaa\xaa\xaa\xa8\x0f'
    b'\xf0\xaa\xaa\xaa\xaa\xaa\xaa\x0f\xc0\xaa\xaa\xaa\xaa\xaa\xaa\x03'
    b'\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0'
    b'\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83'
    b'\xc0\xaa\xaa\xaa\xaa\xaa\xaa\x03\xf0\xaa\xaa\xaa\xaa\xaa\xaa\x0f'
    b'\xf0\x2a\xaa\xaa\xaa\xaa\xa8\x0f\xfc\x0a\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\xff\x02\xaa\xaa\xaa\xaa\x80\xff\xff\xc0\xaa\xaa\xaa\xaa\x03\xff'
    b'\xff\xf0\x0a\xaa\xaa\xa0\x0f\xff\xff\xfc\x00\xaa\xaa\x00\x3f\xff'
    b'\xff\xff\xc0\x00\x00\x03\xff\xff\xff\xff\xff\x00\x00\xff\xff\xff'
),
5: (
    b'\xff\xff\xff\x00\x00\xff\xff\xff\xff\xff\xc0\x00\x00\x03\xff\xff'
    b'\xff\xfc\x00\xaa\xaa\x00\x3f\xff\xff\xf0\x0a\xaa\xaa\xa0\x0f\xff'
    b'\xff\xc0\xaa\xaa\xaa\xaa\x03\xff\xff\x02\xaa\xaa\xaa\xaa\x80\xff'
    b'\xfc\x0a\xaa\xaa\xaa\xaa\xa0\x3f\xf0\x2a\xaa\xaa\xaa\xaa\xa8\x0f'
    b'\xf0\xaa\xaa\xaa\xaa\xaa\xaa\x0f\xc0\xaa\xaa\xaa\xaa\xaa\xaa\x03'
    b'\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83'
    b'\x0a\xaa\xaa\xa5\x6a\xaa\xaa\xa0\x0a\xaa\xaa\x95\x5a\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\x55\x56\xaa\xaa\xa0\x0a\xaa\xaa\x55\x56\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\x55\x56\xaa\xaa\xa0\x0a\xaa\xaa\x95\x5a\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\xa5\x6a\xaa\xaa\xa0\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0'
    b'\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83'
    b'\xc0\xaa\xaa\xaa\xaa\xaa\xaa\x03\xf0\xaa\xaa\xaa\xaa\xaa\xaa\x0f'
    b'\xf0\x2a\xaa\xaa\xaa\xaa\xa8\x0f\xfc\x0a\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\xff\x02\xaa\xaa\xaa\xaa\x80\xff\xff\xc0\xaa\xaa\xaa\xaa\x03\xff'
    b'\xff\xf0\x0a\xaa\xaa\xa0\x0f\xff\xff\xfc\x00\xaa\xaa\x00\x3f\xff'
    b'\xff\xff\xc0\x00\x00\x03\xff\xff\xff\xff\xff\x00\x00\xff\xff\xff'
),
6: (
    b'\xff\xff\xff\xfd\x7f\xff\xff\xff\xff\xff\xc0\xf5\x5f\x03\xff\xff'
    b'\xff\xfc\x00\xf5\x5f\x00\x3f\xff\xff\xf0\x0a\xa5\x5a\xa0\x0f\xff'
    b'\xff\xc0\xaa\xa5\x5a\xaa\x03\xff\xff\x02\xaa\xa5\x5a\xaa\x80\xff'
    b'\xfc\x0a\xaa\xa5\x5a\xaa\xa0\x3f\xf0\x2a\xaa\xa5\x5a\xaa\xa8\x0f'
    b'\xf0\xaa\xaa\xa5\x5a\xaa\xaa\x0f\xc0\xaa\xaa\xa5\x5a\xaa\xaa\x03'
    b'\xc2\xaa\xaa\xa5\x5a\xaa\xaa\x83\xc2\xaa\xaa\xa5\x5a\xaa\xaa\x83'
    b'\x0a\xaa\xaa\xa5\x5a\xaa\xaa\xa0\x0a\xaa\xaa\xa5\x5a\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\xa5\x5a\xaa\xaa\xa0\x0a\xaa\xaa\xa5\x5a\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\xa5\x5a\xaa\xaa\xa0\x0a\xaa\xaa\xa5\x5a\xaa\xaa\xa0'
    b'\x0a\xaa\xaa\xa9\x6a\xaa\xaa\xa0\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa0'
    b'\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83\xc2\xaa\xaa\xaa\xaa\xaa\xaa\x83'
    b'\xc0\xaa\xaa\xaa\xaa\xaa\xaa\x03\xf0\xaa\xaa\xaa\xaa\xaa\xaa\x0f'
    b'\xf0\x2a\xaa\xaa\xaa\xaa\xa8\x0f\xfc\x0a\xaa\xaa\xaa\xaa\xa0\x3f'
    b'\xff\x02\xaa\xaa\xaa\xaa\x80\xff\xff\xc0\xaa\xaa\xaa\xaa\x03\xff'
    b'\xff\xf0\x0a\xaa\xaa\xa0\x0f\xff\xff\xfc\x00\xaa\xaa\x00\x3f\xff'
    b'\xff\xff\xc0\x00\x00\x03\xff\xff\xff\xff\xff\x00\x00\xff\xff\xff'
),
}

colortable = { 
    0: (b'\x00\x00\x00\x02\x00\x00\x00\x00\xff\xff\xff\x00\xff\xff\xff\x00'),
    1: (b'\x00\x00\x00\x02\x01\x24\xf7\x00\xf0\xf0\xf0\x00\xff\xff\xff\x00'),
    2: (b'\x00\x00\x00\x02\x00\xff\x00\x00\xf0\xf0\xf0\x00\xff\xff\xff\x00'),
    3: (b'\x00\x00\x00\x02\x00\xce\xff\x00\xf0\xf0\xf0\x00\xff\xff\xff\x00'),
    4: (b'\xff\xff\xff\x02\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00'),
    5: (b'\xff\xff\xff\x02\x01\x24\xf7\x00\x10\x10\x10\x00\x00\x00\x00\x00'),
    6: (b'\xff\xff\xff\x02\x00\xff\x00\x00\x10\x10\x10\x00\x00\x00\x00\x00'),
    7: (b'\xff\xff\xff\x02\x00\xce\xff\x00\x10\x10\x10\x00\x00\x00\x00\x00'),
}
width = 32
height = 32
colors = 2

def get_icon(icon_index = 0, color_index = 0):
    return width, height, addressof(_icons[icon_index]), colors, addressof(colortable[color_index])
    
def draw(x, y, icon_index, draw_fct, color_index = 0):
    draw_fct(x - width//2, y - height // 2, width, height, addressof(_icons[icon_index]), colors, addressof(colortable[color_index]))
