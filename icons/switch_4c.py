
# Code generated by bmp_to_icon.py
from uctypes import addressof

_icons = { 
0: (
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf0\x00'
    b'\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\x00\x00\xff\xff\xff\xfc\x00\x00\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\x3f\xff\xff\xf0\x00\x0a\xaa\xaa\xaa\xaa\xaa\xaa'
    b'\xa0\x00\x0f\xff\xff\xc0\x02\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x80'
    b'\x03\xff\xff\x00\x2a\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x00\xff'
    b'\xfc\x00\xaa\x80\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x00\x3f\xfc\x02'
    b'\xa8\x00\x00\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x80\x3f\xf0\x0a\xa0\x00'
    b'\x00\x2a\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x0f\xf0\x0a\x80\x00\x00\x0a'
    b'\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x0f\xc0\x2a\x00\x15\x50\x02\xaa\xaa'
    b'\xaa\xaa\xaa\xaa\xa8\x03\xc0\x2a\x00\x55\x54\x02\xaa\xaa\xaa\xaa'
    b'\xaa\xaa\xa8\x03\xc0\x2a\x00\x55\x54\x02\xaa\xaa\xaa\xaa\xaa\xaa'
    b'\xa8\x03\xc0\x2a\x01\x55\x55\x02\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x03'
    b'\xc0\x2a\x01\x55\x55\x02\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x03\xc0\x2a'
    b'\x00\x55\x54\x02\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x03\xc0\x2a\x00\x55'
    b'\x54\x02\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x03\xc0\x2a\x00\x15\x50\x02'
    b'\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x03\xf0\x0a\x80\x00\x00\x0a\xaa\xaa'
    b'\xaa\xaa\xaa\xaa\xa0\x0f\xf0\x0a\xa0\x00\x00\x2a\xaa\xaa\xaa\xaa'
    b'\xaa\xaa\xa0\x0f\xfc\x02\xa8\x00\x00\xaa\xaa\xaa\xaa\xaa\xaa\xaa'
    b'\x80\x3f\xfc\x00\xaa\x80\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x00\x3f'
    b'\xff\x00\x2a\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x00\xff\xff\xc0'
    b'\x02\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x80\x03\xff\xff\xf0\x00\x0a'
    b'\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x00\x0f\xff\xff\xfc\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\x00\x00\x3f\xff\xff\xff\x00\x00\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\xff\xff\xff\xff\xf0\x00\x00\x00\x00\x00\x00\x00'
    b'\x00\x0f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
),
1: (
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf0\x00'
    b'\x00\x00\x00\x00\x00\x00\x00\x0f\xff\xff\xff\xff\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\x00\x00\xff\xff\xff\xfc\x00\x00\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\x3f\xff\xff\xf0\x00\x0a\xaa\xaa\xaa\xaa\xaa\xaa'
    b'\xa0\x00\x0f\xff\xff\xc0\x02\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x80'
    b'\x03\xff\xff\x00\x2a\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x00\xff'
    b'\xfc\x00\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x02\xaa\x00\x3f\xfc\x02'
    b'\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x00\x00\x2a\x80\x3f\xf0\x0a\xaa\xaa'
    b'\xaa\xaa\xaa\xaa\xa8\x00\x00\x0a\xa0\x0f\xf0\x0a\xaa\xaa\xaa\xaa'
    b'\xaa\xaa\xa0\x00\x00\x02\xa0\x0f\xc0\x2a\xaa\xaa\xaa\xaa\xaa\xaa'
    b'\x80\x05\x54\x00\xa8\x03\xc0\x2a\xaa\xaa\xaa\xaa\xaa\xaa\x80\x15'
    b'\x55\x00\xa8\x03\xc0\x2a\xaa\xaa\xaa\xaa\xaa\xaa\x80\x15\x55\x00'
    b'\xa8\x03\xc0\x2a\xaa\xaa\xaa\xaa\xaa\xaa\x80\x55\x55\x40\xa8\x03'
    b'\xc0\x2a\xaa\xaa\xaa\xaa\xaa\xaa\x80\x55\x55\x40\xa8\x03\xc0\x2a'
    b'\xaa\xaa\xaa\xaa\xaa\xaa\x80\x15\x55\x00\xa8\x03\xc0\x2a\xaa\xaa'
    b'\xaa\xaa\xaa\xaa\x80\x15\x55\x00\xa8\x03\xc0\x2a\xaa\xaa\xaa\xaa'
    b'\xaa\xaa\x80\x05\x54\x00\xa8\x03\xf0\x0a\xaa\xaa\xaa\xaa\xaa\xaa'
    b'\xa0\x00\x00\x02\xa0\x0f\xf0\x0a\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x00'
    b'\x00\x0a\xa0\x0f\xfc\x02\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x00\x00\x2a'
    b'\x80\x3f\xfc\x00\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x02\xaa\x00\x3f'
    b'\xff\x00\x2a\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xa8\x00\xff\xff\xc0'
    b'\x02\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x80\x03\xff\xff\xf0\x00\x0a'
    b'\xaa\xaa\xaa\xaa\xaa\xaa\xa0\x00\x0f\xff\xff\xfc\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\x00\x00\x3f\xff\xff\xff\x00\x00\x00\x00\x00\x00'
    b'\x00\x00\x00\x00\xff\xff\xff\xff\xf0\x00\x00\x00\x00\x00\x00\x00'
    b'\x00\x0f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
    b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff'
),
}


colortable = { 
    0: (b'\x00\x00\x00\x02\xff\xff\xff\x00\x00\x00\x00\x00\xff\xff\xff\x00'),
    1: (b'\x00\x00\x00\x02\xf0\xf0\xf0\x00\x01\x24\xf7\x00\xff\xff\xff\x00'),
    2: (b'\x00\x00\x00\x02\xf0\xf0\xf0\x00\x00\xff\x00\x00\xff\xff\xff\x00'),
    3: (b'\x00\x00\x00\x02\xf0\xf0\xf0\x00\x00\xce\xff\x00\xff\xff\xff\x00'),
    4: (b'\xff\xff\xff\x02\x00\x00\x00\x00\xff\xff\xff\x00\x00\x00\x00\x00'),
    5: (b'\xff\xff\xff\x02\x10\x10\x10\x00\x01\x24\xf7\x00\x00\x00\x00\x00'),
    6: (b'\xff\xff\xff\x02\x10\x10\x10\x00\x00\xff\x00\x00\x00\x00\x00\x00'),
    7: (b'\xff\xff\xff\x02\x10\x10\x10\x00\x00\xce\xff\x00\x00\x00\x00\x00'),
}
width = 56
height = 32
colors = 2

def get_icon(icon_index = 0, color_index = 0):
    return width, height, addressof(_icons[icon_index]), colors, addressof(colortable[color_index])
    
def draw(x, y, icon_index, draw_fct, color_index = 0):
    draw_fct(x - width//2, y - height // 2, width, height, addressof(_icons[icon_index]), colors, addressof(colortable[color_index]))
