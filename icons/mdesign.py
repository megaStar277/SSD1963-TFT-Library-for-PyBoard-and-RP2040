
# Code generated by bmp_to_icon.py
from uctypes import addressof

_icons = { 
0: (
    b'\xff\xff\xfd\x50\x05\x7f\xff\xff\xff\xff\xd0\x00\x00\x07\xff\xff'
    b'\xff\xfd\x00\x00\x00\x00\x7f\xff\xff\xf4\x00\x00\x00\x00\x1f\xff'
    b'\xff\xc0\x00\x00\x00\x00\x03\xff\xff\x00\x00\x00\x00\x00\x00\xff'
    b'\xfd\x00\x00\x00\x00\x00\x00\x7f\xf4\x00\x00\x00\x00\x00\x40\x1f'
    b'\xf0\x00\x00\x00\x00\x01\xb0\x0f\xd0\x00\x00\x00\x00\x06\xac\x07'
    b'\xc0\x00\x00\x00\x00\x1a\xa4\x03\x40\x00\x00\x00\x00\x6a\x90\x03'
    b'\x40\x00\x00\x00\x01\xaa\x40\x01\x40\x00\x00\x00\x06\xa9\x00\x01'
    b'\x00\x0f\x00\x00\x1a\xa4\x00\x00\x00\x3a\xc0\x00\x6a\x90\x00\x00'
    b'\x00\x1a\xb0\x01\xaa\x40\x00\x00\x00\x0e\xac\x06\xa9\x00\x00\x00'
    b'\x40\x01\xab\x1a\xa4\x00\x00\x01\x40\x00\xea\xea\x90\x00\x00\x01'
    b'\x40\x00\x3a\xaa\x40\x00\x00\x03\xc0\x00\x06\xa9\x00\x00\x00\x03'
    b'\xd0\x00\x03\xa4\x00\x00\x00\x07\xf0\x00\x00\x50\x00\x00\x00\x0f'
    b'\xf4\x00\x00\x00\x00\x00\x00\x1f\xfd\x00\x00\x00\x00\x00\x00\x7f'
    b'\xff\x00\x00\x00\x00\x00\x00\xff\xff\xc0\x00\x00\x00\x00\x03\xff'
    b'\xff\xf4\x00\x00\x00\x00\x1f\xff\xff\xfd\x00\x00\x00\x00\x7f\xff'
    b'\xff\xff\xd0\x00\x00\x07\xff\xff\xff\xff\xff\x50\x05\xff\xff\xff'
),
1: (
    b'\xff\xff\xfd\x40\x01\x7f\xff\xff\xff\xff\xd0\x00\x00\x07\xff\xff'
    b'\xff\xfd\x00\x00\x00\x00\x7f\xff\xff\xf0\x00\x57\xd5\x00\x1f\xff'
    b'\xff\xc0\x06\xaa\xaa\x90\x03\xff\xff\x00\x7a\xaa\xaa\xad\x00\xff'
    b'\xfc\x01\xaa\xaa\xaa\xaa\x40\x7f\xf4\x06\xaa\xaa\xaa\xaa\x90\x1f'
    b'\xf0\x1a\xaa\xd0\x07\xaa\xa4\x0f\xd0\x3a\xa9\x00\x00\x6a\xac\x07'
    b'\xc0\x6a\xa0\x00\x00\x0a\xa9\x03\x40\xaa\x90\x00\x00\x06\xab\x01'
    b'\x41\xaa\xc0\x00\x00\x03\xaa\x41\x01\xaa\x40\x00\x00\x01\xaa\x40'
    b'\x01\xaa\x00\x00\x00\x00\xaa\x40\x03\xaa\x00\x00\x00\x00\xaa\xc0'
    b'\x03\xaa\x00\x00\x00\x00\xaa\xc0\x01\xaa\x00\x00\x00\x00\xaa\x40'
    b'\x01\xaa\x40\x00\x00\x01\xaa\x40\x41\xaa\xc0\x00\x00\x03\xaa\x41'
    b'\x40\xaa\x90\x00\x00\x06\xab\x01\xc0\x6a\xa0\x00\x00\x0a\xa9\x03'
    b'\xd0\x3a\xa9\x00\x00\x6a\xac\x07\xf0\x1a\xaa\xd0\x07\xaa\xa4\x0f'
    b'\xf4\x06\xaa\xaa\xaa\xaa\x90\x1f\xfd\x01\xaa\xaa\xaa\xaa\x40\x7f'
    b'\xff\x00\x7a\xaa\xaa\xad\x00\xff\xff\xc0\x07\xaa\xaa\xd0\x03\xff'
    b'\xff\xf4\x00\x57\xd5\x00\x1f\xff\xff\xfd\x00\x00\x00\x00\x7f\xff'
    b'\xff\xff\xd0\x00\x00\x07\xff\xff\xff\xff\xfd\x40\x01\x7f\xff\xff'
),
2: (
    b'\xff\xff\xfd\x40\x01\x7f\xff\xff\xff\xff\xd0\x00\x00\x07\xff\xff'
    b'\xff\xfd\x00\x00\x00\x00\x7f\xff\xff\xf0\x00\x17\xd4\x00\x0f\xff'
    b'\xff\xc0\x06\xaa\xaa\x90\x03\xff\xff\x00\x7a\xaa\xaa\xad\x00\xff'
    b'\xfc\x01\xaa\xaa\xaa\xaa\x40\x3f\xf4\x06\xaa\xaa\xaa\xaa\x90\x1f'
    b'\xf0\x1a\xaa\xaa\xaa\xaa\xa4\x0f\xd0\x3a\xa9\x5e\xb5\x6a\xac\x07'
    b'\xc0\x6a\xa8\x06\x90\x2a\xa9\x03\x40\xaa\xa8\x06\x90\x2a\xab\x01'
    b'\x40\xaa\xa8\x06\x90\x2a\xaa\x01\x01\xaa\xa8\x06\x90\x2a\xaa\x40'
    b'\x01\xaa\xa8\x06\x90\x2a\xaa\x40\x03\xaa\xa8\x06\x90\x2a\xaa\xc0'
    b'\x03\xaa\xa8\x06\x90\x2a\xaa\xc0\x01\xaa\xa8\x06\x90\x2a\xaa\x40'
    b'\x01\xaa\xa8\x06\x90\x2a\xaa\x40\x40\xaa\xa8\x06\x90\x2a\xaa\x01'
    b'\x40\xaa\xa8\x06\x90\x2a\xab\x01\xc0\x6a\xa8\x06\x90\x2a\xa9\x03'
    b'\xd0\x3a\xa9\x5e\xb5\x6a\xac\x07\xf0\x1a\xaa\xaa\xaa\xaa\xa4\x0f'
    b'\xf4\x06\xaa\xaa\xaa\xaa\x90\x1f\xfc\x01\xaa\xaa\xaa\xaa\x40\x3f'
    b'\xff\x00\x7a\xaa\xaa\xad\x00\xff\xff\xc0\x07\xaa\xaa\xd0\x03\xff'
    b'\xff\xf0\x00\x17\xd4\x00\x0f\xff\xff\xfd\x00\x00\x00\x00\x7f\xff'
    b'\xff\xff\xd0\x00\x00\x07\xff\xff\xff\xff\xfd\x40\x01\x7f\xff\xff'
),
3: (
    b'\xff\xff\xfd\x40\x01\x7f\xff\xff\xff\xff\xd0\x00\x00\x07\xff\xff'
    b'\xff\xfd\x00\x00\x00\x00\x7f\xff\xff\xf0\x00\x57\xd5\x00\x0f\xff'
    b'\xff\xc0\x06\xaa\xaa\x90\x03\xff\xff\x00\x7a\xaa\xaa\xad\x00\xff'
    b'\xfc\x01\xaa\xaa\xaa\xaa\x40\x7f\xf4\x06\xaa\xaa\xaa\xaa\x90\x1f'
    b'\xf0\x1a\xaa\xaa\xaa\xaa\xa4\x0f\xd0\x3a\xaa\xda\xaa\xaa\xac\x07'
    b'\xc0\x6a\xaa\xc3\xaa\xaa\xa9\x03\x40\xaa\xaa\xc0\x6a\xaa\xab\x01'
    b'\x41\xaa\xaa\xc0\x1a\xaa\xaa\x41\x01\xaa\xaa\xc0\x03\xaa\xaa\x40'
    b'\x01\xaa\xaa\xc0\x00\x6a\xaa\x40\x03\xaa\xaa\xc0\x00\x1a\xaa\xc0'
    b'\x03\xaa\xaa\xc0\x00\x1a\xaa\xc0\x01\xaa\xaa\xc0\x00\x6a\xaa\x40'
    b'\x01\xaa\xaa\xc0\x03\xaa\xaa\x40\x41\xaa\xaa\xc0\x1a\xaa\xaa\x41'
    b'\x40\xaa\xaa\xc0\x6a\xaa\xab\x01\xc0\x6a\xaa\xc3\xaa\xaa\xa9\x03'
    b'\xd0\x3a\xaa\xda\xaa\xaa\xac\x07\xf0\x1a\xaa\xaa\xaa\xaa\xa4\x0f'
    b'\xf4\x06\xaa\xaa\xaa\xaa\x90\x1f\xfc\x01\xaa\xaa\xaa\xaa\x40\x7f'
    b'\xff\x00\x7a\xaa\xaa\xad\x00\xff\xff\xc0\x07\xaa\xaa\xd0\x03\xff'
    b'\xff\xf4\x00\x57\xd5\x00\x1f\xff\xff\xfd\x00\x00\x00\x00\x7f\xff'
    b'\xff\xff\xd0\x00\x00\x07\xff\xff\xff\xff\xfd\x40\x01\x7f\xff\xff'
),
}

colortable = { 
0: ( b'\x02\x06\x03\x02\x62\x65\x63\x00\x80\x80\x80\x00\xff\xff\xff\x00'), 
1: ( b'\x02\x06\x03\x02\x62\x65\x63\x00\x00\x00\xff\x00\xff\xff\xff\x00'), 
2: ( b'\x02\x06\x03\x02\x62\x65\x63\x00\x00\xff\x00\x00\xff\xff\xff\x00'), 
3: ( b'\x02\x06\x03\x02\x62\x65\x63\x00\x00\xff\xff\x00\xff\xff\xff\x00'), 
}
width = 32
height = 32
colors = 2

def get_icon(icon_index = 0, color_index = 0):
    return width, height, addressof(_icons[icon_index]), colors, addressof(colortable[color_index])
    
def draw(x, y, icon_index, draw_fct, color_index = 0):
    draw_fct(x - width//2, y - height // 2, width, height, addressof(_icons[icon_index]), colors, addressof(colortable[color_index]))
